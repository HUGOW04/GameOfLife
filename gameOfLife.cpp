#include <windows.h>
#include <iostream>
#include <time.h>
#include <stdio.h>
#include <chrono>

int main()
{
    int combos[16] = { 1,1,-1,1,1,-1,-1,-1,1,0,0,1,-1,0,0,-1 };

    char buffer[25 * 25] = { '#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
						'.','.','#','.','.','#','.','.','#','.','.','#','.','.','.','.','.','.','.','.','.','.','.','.','.',
						'.','.','.','.','.','#','.','.','.','.','.','.','#','.','.','.','#','#','.','.','.','#','#','#','.',
						'.','.','.','.','.','#','#','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.','.','.',
						'#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#','.','#','#','.','.','.','.',
						'.','.','.','.','.','.','.','.','#','.','.','#','#','#','.','.','#','.','#','.','#','.','.','#','.',
						'.','.','.','.','.','#','#','.','#','.','.','.','.','.','.','.','#','.','.','#','#','.','.','.','.',
						'.','.','#','#','.','.','.','#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#',
						'.','#','#','#','.','.','.','.','#','#','.','.','.','.','.','.','.','.','#','.','.','.','.','.','.',
						'.','.','.','.','.','.','.','.','#','.','.','.','#','#','.','.','.','.','.','.','.','.','.','#','.',
						'.','.','#','.','.','.','.','.','#','.','.','#','.','#','#','#','.','.','.','.','.','.','.','.','.',
						'.','.','#','#','.','.','.','.','#','.','#','.','.','.','#','.','.','.','.','#','.','.','.','.','.',
						'.','.','.','.','.','.','.','.','.','#','.','.','.','.','#','.','.','#','.','.','.','.','.','.','.',
						'.','#','.','#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
						'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.',
						'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#','#','#','.','.',
						'.','.','#','.','#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#','.','.','.',
						'.','.','.','#','.','.','.','.','.','.','.','.','.','.','.','.','#','.','.','.','.','.','.','#','.',
						'.','.','.','#','.','.','.','.','.','.','.','.','.','#','.','.','#','.','.','.','.','.','.','.','.',
						'.','.','.','.','#','.','.','.','.','.','.','.','#','.','#','.','#','.','#','.','.','.','.','.','.',
						'.','.','.','.','.','.','.','#','.','.','.','.','#','#','#','.','.','#','.','.','.','.','#','#','.',
						'.','.','.','.','#','.','.','#','.','#','.','#','.','#','.','.','.','#','#','.','.','.','.','.','.',
						'.','.','.','.','.','#','.','#','#','#','.','.','#','.','.','.','#','#','.','.','.','.','.','#','#',
						'.','.','.','.','#','.','.','.','.','.','.','.','#','#','.','#','.','.','#','.','.','.','#','#','.',
						'.','.','.','#','.','.','.','#','#','#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.', };
    
    char screen[25 * 25] = { '.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','#','#','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','#','.','#','.','.','.','.','.','#','#','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','#','.','.','#','#','.','#','.','#','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','#','#','.','.','#','#','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','#','#','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','#','#','#','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','#','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',
							'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.', };

    srand(time(NULL));
    long long int lastTime = std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count() + 4000;

    while (true)
    {
        if(std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count() - lastTime > 100)
        {
            system("cls");
            lastTime = std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count();
           for (int i = 0; i < 25; i++)
			{
				for (int j = 0; j < 25; j++)
				{
					screen[25 * i + j] = buffer[25 * i + j];
				}
			}
            for(int i = 0; i< 25; i++)
            {
                for(int j = 0; j < 25; j++)
                {
                    std::cout<<screen[25 * i + j];
                    int neighbors = 0;
                    for(int k = 0; k < 8; k++)
                    {
                       if (screen[25 * ((i + combos[2 * k]) % 25) + (j + combos[2 * k + 1]) % 25] == '#')
						{
							neighbors++;
						}
                    }
                    if (screen[25 * i + j] == '#')
					{
						if (neighbors < 2)
						{
							buffer[25 * i + j] = '.';
						}
						else if (neighbors < 4)
						{
							buffer[25 * i + j] = '#';
						}
						else
						{
							buffer[25 * i + j] = '.';
						}
					}
					else
					{
						if (neighbors == 3)
						{
							buffer[25 * i + j] = '#';
						}
					}
                }
                std::cout<<"\n";
            }
        }
    }
    

   


}
